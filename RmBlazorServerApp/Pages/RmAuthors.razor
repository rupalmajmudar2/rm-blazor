@page  "/rmauthors"
@inject NavigationManager navMgr
@inject IJSRuntime jsRuntime

<h3>RmAuthors</h3>
<hr />

<div id="rmDivAuthors" class="col-10 alert alert-info"></div>
<button class="btn btn-primary" @onclick="TestJSAlert">JS_Alert</button>
<br />

Now do the same AGAIN - this time from a Reusable Component :
<RmAlertServerComponent></RmAlertServerComponent>

<a href="rmauthors/rmauthordetail/12">J.K.Rowling</a>
<br />
<button class="btn btn-primary" @onclick="Navigate">JKRowling</button>
<br />

<button class="btn btn-primary" @onclick="TestDOMUpdate">Update DOM div</button>
<p>
    My Cities: @RmCitiesText
</p>

@code {
    private void Navigate() {
        navMgr.NavigateTo("rmauthors/rmauthordetail/22");
    }

    private async Task TestJSAlert() {
        await jsRuntime.InvokeVoidAsync("RmTestAlert", "Param1", "Param2");
    }

    private async Task TestDOMUpdate() {
        await jsRuntime.InvokeVoidAsync("RmTestDOMUpdate", "Param1", "Param2");
    }

    public string[] RmCities { get; set; }
    public string RmCitiesText { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender && (RmCities == null)) RmCities = await jsRuntime.InvokeAsync<string[]>("GetCities");
        RmCitiesText = String.Join("-", RmCities);
        Console.WriteLine("Cities = " + RmCitiesText);
        StateHasChanged();
    }
}
